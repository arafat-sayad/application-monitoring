networks:
  sso-network:
    driver: bridge

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: forgejo
      POSTGRES_PASSWORD: GVVX0pp3Z4UKo
      POSTGRES_DB: forgejo
    volumes:
      - ./.data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - sso-network
  # Dex OIDC Provider
  dex:
    image: ghcr.io/dexidp/dex:v2.36.0
    container_name: dex
    ports:
      - "5556:5556"
    volumes:
      - ./dex/config:/etc/dex/config:ro
    command: ["dex", "serve", "/etc/dex/config/config.yaml"]
    restart: unless-stopped
    networks:
      - sso-network

  # Forgejo Git Service
  forgejo:
    image: codeberg.org/forgejo/forgejo:1.20
    container_name: forgejo
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    environment:
      - FORGEJO__security__INSTALL_LOCK=true
      - FORGEJO__database__DB_TYPE=postgres
      - FORGEJO__database__HOST=postgres:5432
      - FORGEJO__database__NAME=forgejo
      - FORGEJO__database__USER=forgejo
      - FORGEJO__database__PASSWD=GVVX0pp3Z4UKo
      - FORGEJO__server__DOMAIN=forgejo.devopsbd.site
      - FORGEJO__server__ROOT_URL=https://forgejo.devopsbd.site
      - FORGEJO__oauth2__ENABLED=true
      - FORGEJO__oauth2__JWT_SECRET=SIGVJfuwHVRnQ+rrhRoKzw7gExdOZLGVVX0pp3Z4UKo=
    volumes:
      - ./.data/forgejo:/data
    restart: unless-stopped
    networks:
      - sso-network
  # Grafana for SSO
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_GENERIC_OAUTH_ENABLED=true
      - GF_AUTH_GENERIC_OAUTH_NAME=Dex
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=grafana
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=grafana_secret
      - GF_AUTH_GENERIC_OAUTH_SCOPES=openid profile email
      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://dex.devopsbd.site/dex/auth
      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://dex.devopsbd.site/dex/token
      - GF_AUTH_GENERIC_OAUTH_API_URL=https://dex.devopsbd.site/dex/userinfo
      - GF_AUTH_SIGNOUT_REDIRECT_URL=https://grafana.devopsbd.site/login
      - GF_SERVER_ROOT_URL=https://grafana.devopsbd.site
    volumes:
      - ./.data/grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - sso-network

  # Nginx Reverse Proxy with Let's Encrypt
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logs:/var/log/nginx
      - ./.data/certs/certbot/conf:/etc/letsencrypt ## For production
      - ./.data/certs/certbot/www:/var/www/certbot ## For production
    restart: unless-stopped
    networks:
      - sso-network

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - ./.data/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - sso-network
    labels:
      org.label-schema.group: "monitoring"

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - sso-network
    labels:
      org.label-schema.group: "monitoring"

  # Node Exporter
  nodeexporter:
    image: prom/node-exporter:v1.7.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - sso-network
    labels:
      org.label-schema.group: "monitoring"

  # cAdvisor
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - sso-network
    labels:
      org.label-schema.group: "monitoring"

  # Pushgateway
  pushgateway:
    image: prom/pushgateway:v1.6.2
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - sso-network
    labels:
      org.label-schema.group: "monitoring"

  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: unless-stopped
    volumes:
      - ./.data/certs/certbot/conf:/etc/letsencrypt
      - ./.data/certs/certbot/www:/var/www/certbot
    networks:
      - sso-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # Caddy
#  caddy:
#    image: caddy:2.7.5
#    container_name: caddy
#    ports:
#      - "3000:3000"
#      - "8080:8080"
#      - "9090:9090"
#      - "9093:9093"
#      - "9091:9091"
#    volumes:
#      - ./caddy:/etc/caddy
#    environment:
#      - ADMIN_USER=${ADMIN_USER:-admin}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
#      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-$2a$14$1l.IozJx7xQRVmlkEQ32OeEEfP5mRxTpbDTCTcXRqn19gXD8YK1pO}
#    restart: unless-stopped
#    networks:
#      - sso-network
#    labels:
#      org.label-schema.group: "monitoring"
